@{
    var appUserIdQueryParameters = new Dictionary<string, string>
    {
        { "ManagedByAppUserId", User.FindFirstValue(ClaimTypes.NameIdentifier) },
    };
}

<aside class="main-sidebar sidebar-dark-primary elevation-4">

    <a asp-controller="Dashboard" asp-action="Index" class="brand-link">
        <img src="~/templates/assets/images/logo sidebar.png" width="120" alt="Logo" class="event-image img-rounded elevation-3" style="opacity: .8">
        <span class="brand-text font-weight-light">@User.FindFirstValue(ClaimTypes.Role)</span>
    </a>

    <!-- Brand Logo -->
    <!-- Sidebar -->
    <div class="sidebar">

        <nav class="mt-2">
            <ol class="nav nav-pills nav-sidebar flex-column" data-widget="treeview" role="menu" data-accordion="false">
                <!-- Add icons to the links using the .nav-icon class
                with font-awesome or any other icon font library -->
                <li class="nav-item">
                    <a asp-controller="Dashboard" asp-action="Index" class="nav-link">
                        <i class="nav-icon fas fa-home"></i> <p>Accueil Snit Tresorerie</p>
                    </a>
                </li>

                <li class="nav-item">
                    <a asp-controller="Dashboard" asp-action="Index" class="nav-link" id="navDashboard">
                        <i class="nav-icon fas fa-tachometer-alt"></i>
                        <p>Tableau de bord</p>
                    </a>
                </li>


                @if ((await AuthorizationService.AuthorizeAsync(User, "intervenor.manage.policy")).Succeeded)
                {
                    <li class="nav-item">
                        <a asp-controller="Intervenors" asp-action="Index" class="nav-link" id="navCustomers">
                            <i class="fas fa-user-tie nav-icon"></i> <p>Intervenants</p>
                        </a>
                    </li>
                }

                @if ((await AuthorizationService.AuthorizeAsync(User, "paymentOption.manage.policy")).Succeeded)
                {
                    <li class="nav-item">
                        <a asp-controller="PaymentOptions" asp-action="Index" class="nav-link" id="navPaymentOptions">
                            <i class="far fa-circle nav-icon"></i> <p>Mode de paiement</p>
                        </a>
                    </li>
                }

                @if ((await AuthorizationService.AuthorizeAsync(User, "appUser.manage.policy")).Succeeded)
                {
                    <li class="nav-item">
                        <a asp-controller="AppUsers" asp-action="Index" class="nav-link" id="navAppUsers">
                            <i class="nav-icon fas fa-users"></i> <p>Utilisateurs</p>
                        </a>
                    </li>
                }

                @if ((await AuthorizationService.AuthorizeAsync(User, "site.read.policy")).Succeeded)
                {
                    <li class="nav-item">
                        <a asp-controller="Sites" asp-action="Index" class="nav-link" id="navSites">
                            <i class="nav-icon fas fa-image"></i> <p>Sites</p>
                        </a>
                    </li>
                }

                @if ((await AuthorizationService.AuthorizeAsync(User, "operation.read.policy")).Succeeded)
                {
                    <li class="nav-item">
                        <a asp-controller="Operations" asp-action="Index" class="nav-link" id="navOperations">
                            <i class="nav-icon fas fa-table"></i> <p>Opérations</p>
                        </a>
                    </li>
                }

                @if ((await AuthorizationService.AuthorizeAsync(User, "role.manage.policy")).Succeeded)
                {
                    <li class="nav-item">
                        <a asp-controller="Roles" asp-action="Index" class="nav-link" id="navRoles">
                            <i class="nav-icon fas fa-warehouse"></i> <p>Profils</p>
                        </a>
                    </li>
                }

                @if ((await AuthorizationService.AuthorizeAsync(User, "operationType.manage.policy")).Succeeded)
                {
                    <li class="nav-item">
                        <a asp-controller="OperationTypes" asp-action="Index" class="nav-link" id="navOperationTypes">
                            <i class="far fa-circle nav-icon"></i> <p>Type d'opération</p>
                        </a>
                    </li>
                }

            </ol>
        </nav>
        <!-- /.sidebar-menu -->
        <!-- /.sidebar-menu -->

    </div>
    <!-- /.sidebar -->
</aside>